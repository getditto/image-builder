name: Build and Publish AMI

on:
   push:
      branches:
         - main
         - ore/ditto-image-builder
   workflow_dispatch:
      inputs:
         k8s_version:
            description: "Specify the Kubernetes version"
            required: false
            default: "1.27.15"
            options:
               - "1.27.15"
               - "1.28.15"
               - "1.30.10"
               - "1.31.4"

jobs:
   build-ami:
      name: Build and Publish AMI
      runs-on: ubuntu-latest
      env:
         AWS_PROFILE: ditto-prod-primary
         ACCOUNT_ID: "261908217831"
         ROLE: "image-bakery-runner"
         AWS_REGION: "us-east-2"
         AWS_OUTPUT: "json"

      steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Setup Packer
           uses: hashicorp/setup-packer@main
           with:
             version: "latest"

         - name: Install Packer Amazon Plugin
           run: |
            ls -la
            packer init -upgrade ./packer/config.pkr.hcl 

         - name: Validate Packer template
           run: |
              make validate-ami-ubuntu-2404 

         - name: Set up AWS
           uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
           with:
              aws-region: ${{ env.AWS_REGION }}
              role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_ID }}:role/${{ env.ROLE }}"
              role-session-name: image-builder@build-cluster-api-images=${{ github.run_id }}
              role-duration-seconds: 3600

         - name: Build AMI
           env:
              AWS_PROFILE: $AWS_PROFILE
           run: |
              make build-ami-ubuntu-2404 \
              AWS_REGION=${{ secrets.AWS_REGION }}

         - name: Make AMI Public
           env:
              AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              AWS_REGION: ${{ secrets.AWS_REGION }}
           run: |
              AMI_ID=$(jq -r '.builds[-1].artifact_id' < output/packer-manifest.json | cut -d':' -f2)
              aws ec2 modify-image-attribute --image-id $AMI_ID --launch-permission "{\"Add\": [{\"Group\":\"all\"}]}"
              echo "AMI $AMI_ID is now public."

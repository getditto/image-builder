name: Build and Publish AMI

on:
   push:
      branches:
         - main
         - ore/ditto-image-builder
   workflow_dispatch:
      inputs:
         k8s_version:
            description: "Specify the Kubernetes version"
            required: false
            default: "1.27.15"
            options:
               - "1.27.15"
               - "1.28.15"
               - "1.30.10"
               - "1.31.4"

permissions:
  id-token: write   # This is crucial for OIDC authentication
  contents: read    # Allows reading repository contents

jobs:
   build-ami:
      name: Build and Publish AMI
      runs-on: ubuntu-latest
      env:
         AWS_REGION: "us-east-2"
         ACCOUNT_ID: "261908217831"
         ROLE: "image-builder-runner"
         AWS_OUTPUT: "json"

      steps:
         - name: Checkout repository
           uses: actions/checkout@v3


         - name: Set up AWS
           uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4
           with:
              aws-region: ${{ env.AWS_REGION }}
              role-to-assume: "arn:aws:iam::${{ env.ACCOUNT_ID }}:role/${{ env.ROLE }}"
              role-session-name: image-builder@build-cluster-api-images=${{ github.run_id }}
              role-duration-seconds: 3600

         - name: Setup Packer
           uses: hashicorp/setup-packer@main
           with:
             version: "latest"

         - name: Install Packer Amazon Plugin
           run: |
            packer plugins install github.com/hashicorp/amazon

         - name: Validate Packer template
           run: |
              packer init -upgrade ./images/capi/packer/config.pkr.hcl 
              make validate-ami-ubuntu-2404 

         - name: Build AMI
           env:
              AWS_PROFILE: ditto-prod-primary
           run: |
            UBUNTU_FILE=$(find ./images/capi/packer -name "ubuntu-2404.json" | head -n 1)

            if [ -z "$UBUNTU_FILE" ]; then
               echo "Error: ubuntu-2404.json file could not be found."
               exit 1
            fi

            echo "Using ubuntu-2404.json at $UBUNTU_FILE"

            K8S_VERSION="${{ github.event.inputs.k8s_version:-1.30.10 }}" # Default to 1.30.10 if not provided

            echo "Adding kubernetes_semver: $K8S_VERSION to $UBUNTU_FILE"

            jq --arg k8s_version "$K8S_VERSION" '.kubernetes_semver = $k8s_version' "$UBUNTU_FILE" > "$UBUNTU_FILE.tmp" && mv "$UBUNTU_FILE.tmp" "$UBUNTU_FILE"

            AWS_PROFILE_ENV="${{ env.AWS_PROFILE }}"
            AWS_PROFILE_FILE=$(jq -r '.aws_profile' "$UBUNTU_FILE")

            if [ "$AWS_PROFILE_ENV" != "$AWS_PROFILE_FILE" ]; then
               echo "AWS profile mismatch. Updating aws_profile in $UBUNTU_FILE to match $AWS_PROFILE_ENV."
               jq --arg aws_profile "$AWS_PROFILE_ENV" '.aws_profile = $aws_profile' "$UBUNTU_FILE" > "$UBUNTU_FILE.tmp" && mv "$UBUNTU_FILE.tmp" "$UBUNTU_FILE"
            else
               echo "AWS profile matches: $AWS_PROFILE_ENV"
            fi

            make build-ami-ubuntu-2404 \
              AWS_REGION=${{ env.AWS_REGION }}

         - name: Make AMI Public
           env:
             AWS_REGION: ${{ env.AWS_REGION }}
           run: |
            if [ -f "./output/packer-manifest.json" ]; then
              PACKER_MANIFEST_PATH="./output/packer-manifest.json"
            else
              echo "Searching for packer-manifest.json in the current directory..."
              PACKER_MANIFEST_PATH=$(find . -name "packer-manifest.json" | head -n 1)
              if [ -z "$PACKER_MANIFEST_PATH" ]; then
               echo "Error: packer-manifest.json file could not be found."
               exit 1
              fi
            fi

            echo "Using packer-manifest.json at $PACKER_MANIFEST_PATH"

            jq -c '.builds[]' < "$PACKER_MANIFEST_PATH" | while read -r BUILD; do
              REGION=$(echo "$BUILD" | jq -r '.region')
              AMI_ID=$(echo "$BUILD" | jq -r '.artifact_id' | awk -F':' '{print $2}' | xargs)

              if [ -n "$AMI_ID" ]; then
               echo "Making AMI $AMI_ID in region $REGION public."
               aws ec2 modify-image-attribute --region "$REGION" --image-id "$AMI_ID" --launch-permission "{\"Add\": [{\"Group\":\"all\"}]}"
               echo "AMI $AMI_ID in region $REGION is now public."
              else
               echo "No AMI found for region $REGION in packer-manifest.json."
              fi
            done

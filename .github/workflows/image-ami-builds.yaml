name: Build and Publish AMI

on:
   push:
      branches:
         - main
   workflow_dispatch:

jobs:
   build-ami:
      name: Build and Publish AMI
      runs-on: ubuntu-latest

      env:
         AWS_PROFILE: ditto-scratchpad-ore
         SSO_START_URL: "https://d-9067b1daed.awsapps.com/start"
         SSO_REGION: "us-east-1"
         SSO_ACCOUNT_ID: "980589262500"
         SSO_ROLE_NAME: "FullAdminSuper"
         AWS_REGION: "us-east-1"
         AWS_OUTPUT: "json"

      steps:
         - name: Checkout repository
           uses: actions/checkout@v3

         - name: Install dependencies
           run: |
              sudo apt-get update
              sudo apt-get install -y make jq awscli

         - name: Validate Packer template
           run: |
              make validate-packer

         - name: Configure AWS SSO
           run: |
              aws configure set sso_start_url "${{ env.SSO_START_URL }}" --profile "${{ env.AWS_PROFILE }}"
              aws configure set sso_region "${{ env.SSO_REGION }}" --profile "${{ env.AWS_PROFILE }}"
              aws configure set sso_account_id "${{ env.SSO_ACCOUNT_ID }}" --profile "${{ env.AWS_PROFILE }}"
              aws configure set sso_role_name "${{ env.SSO_ROLE_NAME }}" --profile "${{ env.AWS_PROFILE }}"
              aws configure set region "${{ env.AWS_REGION }}" --profile "${{ env.AWS_PROFILE }}"
              aws configure set output "${{ env.AWS_OUTPUT }}" --profile "${{ env.AWS_PROFILE }}"
              export AWS_PROFILE="${{ env.AWS_PROFILE }}"

         - name: Build AMI
           env:
              AWS_PROFILE: $AWS_PROFILE
           run: |
              make build-ami-centos-7 \
              make build-ubuntu-2204 \
              make build-ami-amazon-2023 \
              AWS_REGION=${{ secrets.AWS_REGION }}

         - name: Make AMI Public
           env:
              AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              AWS_REGION: ${{ secrets.AWS_REGION }}
           run: |
              AMI_ID=$(jq -r '.builds[-1].artifact_id' < output/packer-manifest.json | cut -d':' -f2)
              aws ec2 modify-image-attribute --image-id $AMI_ID --launch-permission "{\"Add\": [{\"Group\":\"all\"}]}"
              echo "AMI $AMI_ID is now public."
